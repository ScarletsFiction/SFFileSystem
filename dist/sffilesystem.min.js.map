{"version":3,"sources":["init.js"],"names":["SFFileSystem","options","scope","this","LocalFileSystem","TEMPORARY","PERSISTENT","home","storageLocation","ready","temporary","FileErrorMessage","e","code","indexOf","validateFileName","fileName","replace","both_rename","name","callback","error","temp","getParent","parent","optMove","entry","autoWrap","both_copyTo","path","rename","moving","run","dirEntry","both_moveTo","apply","both_getParent","optParent","isFile","wrapFileType","wrapDirectoryType","file_write","blob","append","createWriter","fileWriter","truncated","onwriteend","truncate","position","onerror","Blob","type","seek","write","file_append","file_read","file","reader","FileReader","onloadend","result","readAsText","fileEntry","read","optCopy","copyTo","moveTo","dir_newFolder","optDirectory","create","exclusive","dir_newFile","optFile","dir_getFolder","dir_getFile","dir_exist","currentEntry","dir_contents","createReader","readEntries","entries","length","i","dir_list","push","getDirectory","getFile","newFolder","newFile","getFolder","exist","contents","list","directories","split","filter","folder","splice","dirLevel","recursion","dirSys","folderSystem","pop","join","window","requestFileSystem","webkitRequestFileSystem","initError","console","initReady","setTimeout","requestSystem","quota","fs","initStart","cordova","externalRootDirectory","resolveLocalFileSystemURL","subDirEntry","externalDataDirectory","root","device","platform","navigator","webkitPersistentStorage","requestQuota","grantedBytes","self"],"mappings":"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","file":"sffilesystem.min.js","sourcesContent":["/*\r\n\tSFFileSystem Library\r\n\tA library for accessing local file system for\r\n\tthe current website on the browser\r\n\r\n\thttps://github.com/ScarletsFiction/SFFileSystem\r\n*/\r\n\r\nfunction SFFileSystem(options){\r\n\tvar scope = this;\r\n\tif(typeof LocalFileSystem === 'undefined')\r\n\t\tvar LocalFileSystem = {TEMPORARY: 0, PERSISTENT: 1};\r\n\r\n\tscope.home = false;\r\n\tscope.storageLocation = '';\r\n\tscope.ready = false;\r\n\tscope.temporary = options.temporary === true;\r\n\r\n\tscope.FileErrorMessage = function(e){\r\n\t\tif(e.code === 1) return 'Not found';\r\n\t\telse if(e.code === 2) return 'Security error';\r\n\t\telse if(e.code === 3) return 'Aborted';\r\n\t\telse if(e.code === 4) return 'Not readable';\r\n\t\telse if(e.code === 5) return 'Encoding error';\r\n\t\telse if(e.code === 6) return 'Modification not allowed';\r\n\t\telse if(e.code === 7) return 'Invalid state';\r\n\t\telse if(e.code === 8) return 'Syntax error';\r\n\t\telse if(e.code === 9) return 'Invalid modification';\r\n\t\telse if(e.code === 10) return 'Storage space zero';\r\n\t\telse if(e.code === 11) return 'Type mismatch';\r\n\t\telse if(e.code === 12) return 'Path error';\r\n\t\telse if(e.code === 13) return 'Failed to load directory';\r\n\t\telse if(e.indexOf && e.indexOf('quota') !== -1) return 'Storage quota exceeded';\r\n\t\telse return 'Unknown error';\r\n\t}\r\n\r\n\tscope.validateFileName = function(fileName){\r\n\t\tif(typeof fileName !== \"string\") return fileName;\r\n\t\treturn fileName.replace(/[<>:\\\"/\\\\|?*]/, \"-\");\r\n\t}\r\n\r\n\t// === Both ===\r\n\t\tvar both_rename = function(name, callback, error){\r\n\t\t\tvar temp = this;\r\n\t\t\tthis.getParent(function(parent){\r\n\t\t\t\ttemp.optMove(parent, name, function(entry){\r\n\t\t\t\t\tif(!callback) return;\r\n\t\t\t\t\t\r\n\t\t\t\t\tautoWrap(entry);\r\n\t\t\t\t\tcallback(entry);\r\n\t\t\t\t}, error);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tvar both_copyTo = function(path, rename, callback, error, moving){\r\n\t\t\tvar temp = this;\r\n\t\t\tvar run = function(dirEntry){\r\n\t\t\t\ttemp[moving ? 'optMove' : 'optCopy'](dirEntry, rename, function(entry){\r\n\t\t\t\t\tif(!callback) return;\r\n\t\t\t\t\t\r\n\t\t\t\t\tautoWrap(entry);\r\n\t\t\t\t\tcallback(entry);\r\n\t\t\t\t}, error);\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof path === 'string')\r\n\t\t\t\tscope.path(path, function(entry){\r\n\t\t\t\t\trun(entry);\r\n\t\t\t\t}, false, false, this);\r\n\t\t\telse run(path);\r\n\t\t}\r\n\r\n\t\tvar both_moveTo = function(path, rename, callback, error){\r\n\t\t\tboth_copyTo.apply(this, [path, rename, callback, error, true]);\r\n\t\t}\r\n\r\n\t\tvar both_getParent = function(callback, error){\r\n\t\t\tthis.optParent(function(entry){\r\n\t\t\t\tautoWrap(entry);\r\n\t\t\t\tcallback(entry);\r\n\t\t\t}, error);\r\n\t\t}\r\n\r\n\t\tfunction autoWrap(entry){\r\n\t\t\tif(entry.isFile)\r\n\t\t\t\twrapFileType(entry);\r\n\t\t\telse\r\n\t\t\t\twrapDirectoryType(entry);\r\n\t\t}\r\n\r\n\t// === File ===\r\n\t\tvar file_write = function(blob, callback, error, append){\r\n\t\t\tthis.createWriter(function(fileWriter){\r\n   \t\t\t\tvar truncated = false;\r\n\t\t\t\tfileWriter.onwriteend = function(e){\r\n            \t\tif(!append && !truncated){\r\n            \t\t\tthis.truncate(this.position);\r\n            \t\t\ttruncated = true;\r\n            \t\t\treturn;\r\n            \t\t}\r\n            \t\tif(callback) callback(e);\r\n\t\t\t\t};\r\n\t\t\t\tfileWriter.onerror = error;\r\n\r\n\t\t\t\tif(typeof blob === \"string\")\r\n\t\t\t\t\tblob = new Blob([blob], {type:'text/plain'});\r\n\r\n\t\t\t\tfileWriter.seek(0);\r\n\t\t\t\tfileWriter.write(blob);\r\n\t\t\t}, error);\r\n\t\t}\r\n\r\n\t\tvar file_append = function(blob, callback, error){\r\n\t\t\tfile_write.apply(this, [blob, callback, error, true]);\r\n\t\t}\r\n\r\n\t\tvar file_read = function(callback, error){\r\n\t\t\tthis.file(function(file){\r\n\t\t\t\tvar reader = new FileReader();\r\n\r\n\t\t        reader.onloadend = function() {\r\n\t\t            if(callback) callback(this.result);\r\n\t\t        };\r\n\r\n\t\t        reader.readAsText(file);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// remove\r\n\t\tfunction wrapFileType(fileEntry){\r\n\t\t\tfileEntry.write = file_write;\r\n\t\t\tfileEntry.append = file_append;\r\n\t\t\tfileEntry.read = file_read;\r\n\r\n\t\t\tfileEntry.optCopy = fileEntry.copyTo;\r\n\t\t\tfileEntry.optMove = fileEntry.moveTo;\r\n\t\t\tfileEntry.optParent = fileEntry.getParent;\r\n\t\t\tfileEntry.rename = both_rename;\r\n\t\t\tfileEntry.copyTo = both_copyTo;\r\n\t\t\tfileEntry.moveTo = both_moveTo;\r\n\t\t\tfileEntry.getParent = both_getParent;\r\n\t\t}\r\n\r\n\t// === Directory ===\r\n\t\tvar dir_newFolder = function(name, callback, error){\r\n\t\t\tthis.optDirectory(name, {create:true, exclusive:false}, function(entry){\r\n\t\t\t\tif(!callback) return;\r\n\r\n\t\t\t\twrapDirectoryType(entry);\r\n\t\t\t\tcallback(entry);\r\n\t\t\t}, error);\r\n\t\t}\r\n\r\n\t\tvar dir_newFile = function(name, callback, error){\r\n\t\t\tthis.optFile(name, {create:true, exclusive:false}, function(entry){\r\n\t\t\t\tif(!callback) return;\r\n\t\t\t\t\r\n\t\t\t\twrapFileType(entry);\r\n\t\t\t\tcallback(entry);\r\n\t\t\t}, error);\r\n\t\t}\r\n\r\n\t\tvar dir_getFolder = function(name, callback, error){\r\n\t\t\tthis.optDirectory(name, null, function(entry){\r\n\t\t\t\tif(!callback) return;\r\n\t\t\t\t\r\n\t\t\t\twrapDirectoryType(entry);\r\n\t\t\t\tcallback(entry);\r\n\t\t\t}, error);\r\n\t\t}\r\n\r\n\t\tvar dir_getFile = function(name, callback, error){\r\n\t\t\tthis.optFile(name, null, function(entry){\r\n\t\t\t\tif(!callback) return;\r\n\t\t\t\t\r\n\t\t\t\twrapFileType(entry);\r\n\t\t\t\tcallback(entry);\r\n\t\t\t}, error);\r\n\t\t}\r\n\r\n\t\tvar dir_exist = function(name, callback){\r\n\t\t\tvar currentEntry = this;\r\n\t\t\tcurrentEntry.optFile(name, {create: false}, function(){\r\n\t\t\t\tcallback('file');\r\n\t\t\t}, function(){\r\n\t\t\t\tcurrentEntry.optDirectory(name, {create: false}, function(){\r\n\t\t\t\t\tcallback('folder');\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\tcallback(false);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tvar dir_contents = function(callback, error){\r\n\t\t\tvar directoryReader = this.createReader();\r\n\t\t\tdirectoryReader.readEntries(function(entries){\r\n\t\t\t\tif (entries.length == 0)\r\n\t\t\t\t\tcallback([]);\r\n\t\t\t\telse{\r\n\t\t\t\t\tfor (var i = 0; i < entries.length; i++) {\r\n\t\t\t\t\t\tif(entries[i].isFile)\r\n\t\t\t\t\t\t\twrapFileType(entries[i]);\r\n\t\t\t\t\t\telse wrapDirectoryType(entries[i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//entries = [{isFile, isDirectory, name, filesystem, nativeURL}]\r\n\t\t\t\t\tcallback(entries);\r\n\t\t\t\t}\r\n\t\t\t}, error);\r\n\t\t}\r\n\r\n\t\tvar dir_list = function(callback, error){\r\n\t\t\tvar directoryReader = this.createReader();\r\n\t\t\tdirectoryReader.readEntries(function(entries){\r\n\t\t\t\tif (entries.length == 0)\r\n\t\t\t\t\tcallback([]);\r\n\t\t\t\telse{\r\n\t\t\t\t\tvar temp = [];\r\n\t\t\t\t\tfor (var i = 0; i < entries.length; i++) {\r\n\t\t\t\t\t\ttemp.push(entries[i].name);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcallback(temp);\r\n\t\t\t\t}\r\n\t\t\t}, error);\r\n\t\t}\r\n\r\n\t\t// removeRecursively, remove\r\n\t\tfunction wrapDirectoryType(dirEntry){\r\n\t\t\tdirEntry.optDirectory = dirEntry.getDirectory;\r\n\t\t\tdirEntry.optFile = dirEntry.getFile;\r\n\t\t\tdelete dirEntry.getDirectory;\r\n\r\n\t\t\tdirEntry.newFolder = dir_newFolder;\r\n\t\t\tdirEntry.newFile = dir_newFile;\r\n\t\t\tdirEntry.getFolder = dir_getFolder;\r\n\t\t\tdirEntry.getFile = dir_getFile;\r\n\t\t\tdirEntry.exist = dir_exist;\r\n\t\t\tdirEntry.contents = dir_contents;\r\n\t\t\tdirEntry.list = dir_list;\r\n\r\n\t\t\tdirEntry.optCopy = dirEntry.copyTo;\r\n\t\t\tdirEntry.optMove = dirEntry.moveTo;\r\n\t\t\tdirEntry.optParent = dirEntry.getParent;\r\n\t\t\tdirEntry.rename = both_rename;\r\n\t\t\tdirEntry.copyTo = both_copyTo;\r\n\t\t\tdirEntry.moveTo = both_moveTo;\r\n\t\t\tdirEntry.getParent = both_getParent;\r\n\t\t}\r\n\r\n\tscope.path = function(path, callback, error, create, dirEntry){\r\n\t\tif(path[0] === '/' || !dirEntry) dirEntry = scope.home;\r\n\r\n\t\tvar directories = path.split('/').filter(function(folder){\r\n\t\t\treturn folder !== '.' && !!folder;\r\n\t\t});\r\n\r\n\t\tfor (var i = directories.length - 1; i >= 0; i--) {\r\n\t\t\tif(directories[i] === '..' && i !== 0){\r\n\t\t\t\tif(directories[i - 1] !== '..'){\r\n\t\t\t\t\ti--;\r\n\t\t\t\t\tdirectories.splice(i, 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(directories.length === 0) return callback(dirEntry);\r\n\r\n\t\tvar dirLevel = 0;\r\n\t\tvar recursion = function(dirSys){\r\n\t\t\tif(directories[dirLevel] === '..'){\r\n\t\t\t\tdirLevel++;\r\n\t\t\t\tdirEntry.getParent(recursion);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tdirSys.getDirectory(directories[dirLevel], {create:create, exclusive:false}, function(folderSystem){\r\n\t\t\t\tif(directories[dirLevel + 1]){\r\n\t\t\t\t\tdirLevel++;\r\n\t\t\t\t\trecursion(folderSystem);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\twrapDirectoryType(folderSystem);\r\n\t\t\t\t\tcallback(folderSystem);\r\n\t\t\t\t}\r\n\t\t\t}, error);\r\n\t\t};\r\n\r\n\t\trecursion(dirEntry);\r\n\t}\r\n\r\n\tscope.exist = function(path, callback){\r\n\t\tpath = path.split('/');\r\n\t\tvar name = path.pop();\r\n\t\tpath = path.join('/');\r\n\r\n\t\tscope.path(path, function(entry){\r\n\t\t\tentry.exist(name, callback);\r\n\t\t}, function(){\r\n\t\t\tcallback(false);\r\n\t\t});\r\n\t}\r\n\r\n\tscope.list = function(path, callback, error){\r\n\t\tscope.path(path, function(entry){\r\n\t\t\tentry.list(callback);\r\n\t\t}, error);\r\n\t}\r\n\r\n\tscope.contents = function(path, callback, error){\r\n\t\tscope.path(path, function(entry){\r\n\t\t\tentry.contents(callback);\r\n\t\t}, error);\r\n\t}\r\n\t\r\n\t// Initialize root directory\r\n\t;(function(){\r\n\t\tif(!window.requestFileSystem) window.requestFileSystem = window.webkitRequestFileSystem;\r\n\t\tif(!options.initError) options.initError = console.error;\r\n\t\r\n\t\tvar initReady = function(){\r\n\t\t\tscope.ready = true;\r\n\t\t\twrapDirectoryType(scope.home);\r\n\t\t\tif(options.callback)\r\n\t\t\t\tsetTimeout(options.callback, 500);\r\n\t\t}\r\n\t\r\n\t\tvar requestSystem = function(quota){\r\n\t\t\twindow.requestFileSystem(LocalFileSystem[scope.temporary === true ? 'TEMPORARY':'PERSISTENT'], quota, function(fs){\r\n\t\t\t\tvar initStart = false;\r\n\t\t\t\tif(typeof cordova !== 'undefined'){\r\n\t\t\t\t\tif(options.home && cordova.file.externalRootDirectory){\r\n\t\t\t\t\t\tinitStart = true;\r\n\t\t\t\t\t\twindow.resolveLocalFileSystemURL(cordova.file.externalRootDirectory, function(dirEntry){\r\n\t\t\t\t\t\t\tdirEntry.getDirectory(options.home, {create:true}, function(subDirEntry){\r\n\t\t\t\t\t\t\t\tscope.home = subDirEntry;\r\n\t\t\t\t\t\t\t\tscope.storageLocation = \"External Card\";\r\n\t\t\t\t\t\t\t\tinitReady();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}, options.initError);\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\telse if(cordova.file.externalDataDirectory){\r\n\t\t\t\t\t\tinitStart = true;\r\n\t\t\t\t\t\twindow.resolveLocalFileSystemURL(cordova.file.externalDataDirectory, function(dirEntry){\r\n\t\t\t\t\t\t\tscope.home = dirEntry;\r\n\t\t\t\t\t\t\tscope.storageLocation = \"External Application Home\";\r\n\t\t\t\t\t\t\tinitReady();\r\n\t\t\t\t\t\t}, options.initError);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(!initStart){\r\n\t\t\t\t\tif(options.home){\r\n\t\t\t\t\t\tfs.root.getDirectory(options.home, {create:true}, function(subDirEntry){\r\n\t\t\t\t\t\t\tscope.home = subDirEntry;\r\n\t\t\t\t\t\t\tinitReady();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tscope.home = fs.root;\r\n\t\t\t\t\t\tinitReady();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tscope.storageLocation = \"Internal Application Home\";\r\n\t\t\t\t}\r\n\t\t\t}, options.initError);\r\n\t\t}\r\n\t\r\n\t\tvar quota = (typeof device !== 'undefined' && device.platform !== 'browser') ? 0 : (1024*1024*1024*1024);\r\n\r\n\t\t// Executed on browser\r\n\t\tif(quota !== 0) return requestSystem(quota);\r\n\t\r\n\t\t// Executed on deployed cordova\r\n\t\tnavigator.webkitPersistentStorage.requestQuota(quota, function(grantedBytes){\r\n\t\t\tself.grantedBytes = grantedBytes;\r\n\t\t\trequestSystem(0);\r\n\t\t}, options.initError);\r\n\t})();\r\n}"]}